---
title: "Long-Term Outcome of Patients with Acute Hypoxaemic Respiratory Failure Admitted to Australian and New Zealand Intensive Care Units" 
subtitle: "Statistical Analysis"
author: "Dr Benjamin Moran, MBBS, BMedSci (Hons), MMedStats, FCICM, FANZCA"
date: today
format:   
  html:
    embed-resources: true
    grid: 
      body-width: 4000px
      sidebar-width: 150px
execute:
  cache: true
  echo: false
toc: true
toc-location: left
toc-depth: 5
number-sections: true
bibliography: references.bib
theme: yeti
---

## Introduction
This is an explanation of the statistical analysis for the study exploring the long-term outcomes of patients admitted to ICU with acute hypoxaemic respiratory failure.

## Methods

This is a retrospective study using data from the Australian and New Zealand Intensive Care Society (ANZICS) adult ICU patient database (APD). This manuscript has been prepared and reported in accordance with the Strengthening the Reporting of Observational Studies in Epidemiology (STROBE) Statement.

### Patient Population

We included all patients in the ANZICS APD from 01/01/2016 to 31/12/2022.

### Aims and Objectives

1.  Determine the association between PaO~2~:FiO~2~ ratio and hospital mortality.
2.  Determine the association between PaO~2~:FiO~2~ ratio and ICU mortality.
3.  Determine the association between PaO~2~:FiO~2~ ratio and mortality at other timepoints (28 day, 6 months, 12 months).
4.  Assess the current PaO~2~:FiO~2~ ratio categories as diagnostic for hospital mortality.
5.  Validate the PaO~2~:FiO~2~ ratio as a diagnostic tool for prediction of hospital mortality, and mortality at other times (ICU, 28-day, 6 months, 12 months).
6.  Determine the validity of the PaO~2~:FiO~2~ ratio in predicting hospital mortality in pre-specified subgroups (invasive ventilation, ventilatory support, age, sex, admission diagnoses, frailty categories, presence of treatment limitations).

### Statistical Analysis

We summarized baseline ICU and patient-level characteristics and unadjusted outcomes using standard descriptive statistics. For categorical data, we used counts and percentages, and for continuous data we used mean Â± standard deviation (SD) or median (interquartile range, IQR) as appropriate depending on the distribution of data.

#### Association Between PaO~2~:FiO~2~ Ratio and Hospital Mortality

The unadjusted association between PaO~2~:FiO~2~ ratio and hospital mortality was evaluated visually as a continuous, non-linear variable using restricted cubic splines with 4 knots. Specific unadjusted hospital mortality values for standard PaO~2~:FiO~2~ ratio values were also calculated through interrogation of the spline curve.

#### Validation of PaO~2~:FiO~2~ ratio in Predicting Hospital Mortality

To determine the validitiy of the PaO~2~:FiO~2~ ratio, the area under the receiver operator characteristic curve (AUCROC) was calculated. 95% confidence intervals around the AUC were calculated using 1,000 bootstrap samples.

To determine the optimal cut-off of PaO~2~:FiO~2~ ratio in predicting hospital mortality, receiver operator characteristic curves (ROC) were generated. A cut-off level representing the highest sum of sensitivity and specificity hased on each patients PaO~2~:FiO~2~ ratio was calculated using the Youden method [@youden1950]. In this method, the sensitivity and specificity was calculated over a range of PaO~2~:FiO~2~ ratios. For each value, the Youden's J index was calculated by using the following formula (Youden = Sensitivity + Specificity - 1). The value that corresponds to the highest Youden index was identified as the optimal cut-off, reflecting the highest sum of sensitivity and specifity. We also calculated the sensitivity, specificity, negative predictive value and positive predictive value for this cut-off.

#### Subgroup Analysis

Patients were analysed for validation of the PaO~2~:FiO~2~ ratio in prediction of hospital mortality in the following subgroups: receiving invasive ventilation during the index ICU admission, receiving of other respiratory support (eg non-invasive ventilation, extracorporeal membrane oxygenation) during the ICU admission, sex, age categories, admission diagnoses (medical, cardiac surgery, neurosurgery/trauma, sepsis, post-operative), frailty category (fit/well, mild, moderate, severe frailty) and the presence of treatment limitation status on ICU admission. The same methodology as above was employed.

As there were >800,000 patients in the dataset, a 2-sided p-value of 0.001 was used for statistical significance. Given that there is an increased risk of Type-1 error with multiple testing, the results of the secondary objectives should be viewed as exploratory. Hence, no adjustment for multiplicity was used. Only patients with complete data for all covariates were included in the analysis. Statistical analyses were performed using R Version 4.3.1 (R Core Team, R Foundation for Statistical Computing, Vienna, Austria) and RStudio Version 2023.12.1 (Posit Software, PBC, Boston, MA). Packages used for analysis included tidytable [@fairbanks], tidyverse [@wickham], data.table [@barrett], gtsummary [@sjoberg2021], gt [@iannone2022], cutpointr [@thiele] and pROC [@robin].


```{r setup, include=FALSE, warning=FALSE, cache.lazy=FALSE}
library(tidytable)
library(gtsummary)
library(gt)
library(cutpointr)
library(pROC)

knitr::opts_chunk$set(echo = F, message = F, warning = F, error = T, 
                      out.width = "90%", dev = "png", dpi = 300, cache = T)

# Global Options
options(mc.cores = parallel::detectCores())

# Import and Filter Dataset
ahrf_validation <- fread("~/Documents/Research/Projects/Current Projects/ANZICS APD/APD ARF Study/Data/ahrfvalidation8Sep.csv",
             select = c("DSITEID", "HospitalClassification", "PublicPrivate", "Country", "PatientID", "IcuAdmitYYYY", "ICU_AD_DTM", "SEX", "AGE", "ICU_SRCE", "AP3DIAG", "Apache3Score", "Apache2Score",  "ANZRODRiskOfDeath", "FRAILTY", "DIABETES", "PAO2_ANZ", "FIO2_ANZ", "DIED_HOSP", "DIED_ICU", "ICU_HRS", "HOSP_HRS", "HOSP_OUTCM", "INV_IND", "INV_DAYONE", "ECMO_IND", "NIV_IND", "CHR_RESP", "CHR_CVS", "COVID_pneumonitis_derived", "TRACHE_IND", "SMOKINGINTENSITY", "CHR_LIV", "CHR_REN", "INV_HOURS", "HOSP_AD_DTM", "HOSP_DS_DTM", "TREAT_LMT", "EMG_RSP_ADM", "PRE_ICU_HRS", "PANDEMIC", "sofa_score_derived", "NDI_NHI_DeathDate"))



#==========================================DEMOGRAPHICS==========================================#

# Rename & Reorder Gender
ahrf_validation <- ahrf_validation |> 
  mutate(SEX = case_when(
    SEX == "F" ~ "Female",
    SEX == "M" ~ "Male",
    SEX == "I" ~ "Intersex/Indeterminate",
    SEX == "NULL" ~ "Unknown")) |> 
  mutate(SEX = factor(SEX, levels = c("Female", "Male", "Intersex/Indeterminate", "Unknown")))

# Age Category
ahrf_validation <- ahrf_validation |> mutate(age_cat = case_when(
  AGE <= 44 ~ "<44",
  AGE >44 & AGE <=64 ~ "45-64",
  AGE >64 & AGE < 84 ~ "65-84",
  AGE > 84 ~ ">84")) 

# Rename ICU Admission Source #
ahrf_validation <- ahrf_validation |>  mutate(icu_admit_source = case_when(
            (ICU_SRCE ==1) ~ "Operating Theatre/Recovery",
            (ICU_SRCE ==2) ~ "Emergency Department",
            (ICU_SRCE ==3) ~ "Ward",
            (ICU_SRCE ==4) ~ "ICU, Same Hospital",
            (ICU_SRCE ==5) ~ "Other Hospital",
            (ICU_SRCE ==6) ~ "Other Hopsital",
            (ICU_SRCE ==9) ~ "Direct from Home")) |> 
  select(-ICU_SRCE)

# Reorder Admission Source
ahrf_validation <- ahrf_validation |>  mutate(icu_admit_source = factor(icu_admit_source, levels = c("Emergency Department", "Operating Theatre/Recovery", "Ward", "ICU, Same Hospital", "Other Hospital", "Direct from Home")))

# Relabel Admission Diagnoses #
# Minimal Admission Diagnosis
ahrf_validation <- ahrf_validation |> 
  mutate(ap3diag_min = case_when(
            (AP3DIAG>=1202) & (AP3DIAG<=1213) ~ "Cardiac Surgery",
            (AP3DIAG>=1301) & (AP3DIAG<=1304) ~ "Post-Operative",
            (AP3DIAG>=1401) & (AP3DIAG<=1413) ~ "Post-Operative",
            (AP3DIAG>=1501) & (AP3DIAG<=1506) ~ "Trauma/Neurosurgery",
            (AP3DIAG>=1602) & (AP3DIAG<=1605) ~ "Trauma/Neurosurgery",
            (AP3DIAG>=1701) & (AP3DIAG<=1705) ~ "Post-Operative",
            (AP3DIAG>=1801) & (AP3DIAG<=1803) ~ "Post-Operative",
            (AP3DIAG>=1902) & (AP3DIAG<=1904) ~ "Post-Operative",
            (AP3DIAG==2101) ~ "Post-Operative",
            (AP3DIAG==2201) ~ "Post-Operative",
            (AP3DIAG>=101) & (AP3DIAG<=111) ~ "Medical",
            (AP3DIAG>=201) & (AP3DIAG<=213) ~ "Medical",
            (AP3DIAG>=301) & (AP3DIAG<=313) ~ "Medical",
            (AP3DIAG>=401) & (AP3DIAG<410) ~ "Medical",
            (AP3DIAG>=501) & (AP3DIAG<=504) ~ "Sepsis",
            (AP3DIAG>601) & (AP3DIAG<=605) ~ "Trauma/Neurosurgery",
            (AP3DIAG>=701) & (AP3DIAG<=704) ~ "Medical",
            (AP3DIAG>=801) & (AP3DIAG<=802) ~ "Medical",
            (AP3DIAG>=901) & (AP3DIAG<=903) ~ "Medical",
            (AP3DIAG>=1101) & (AP3DIAG<=1102) ~ "Medical")) 

# Reorder Apache3
ahrf_validation <- ahrf_validation |>  mutate(ap3diag_min = factor(ap3diag_min, levels = c("Medical", "Post-Operative", "Sepsis", "Trauma/Neurosurgery", "Cardiac Surgery")))

# Convert Apache3Score to numeric
ahrf_validation <- ahrf_validation |> mutate(Apache3Score = as.numeric(Apache3Score))

# Convert ANZROD to numeric
ahrf_validation <- ahrf_validation |> mutate(ANZRODRiskOfDeath = as.numeric(ANZRODRiskOfDeath))

# Reorder Hospital Type
ahrf_validation <- ahrf_validation |>  mutate(HospitalClassification = factor(HospitalClassification, levels = c("Tertiary", "Metropolitan", "Rural / Regional", "Private")))

# Categorise CFS
ahrf_validation <- ahrf_validation |> 
  mutate(FRAILTY = case_when(
    (FRAILTY == "1"|FRAILTY == "2"|FRAILTY == "3") ~ "Fit/Well",
    (FRAILTY == "4"|FRAILTY == "5") ~ "Mild",
    FRAILTY == "6" ~ "Moderate",
     FRAILTY == "7" ~ "Severe"))

# Rename Diabetes
ahrf_validation <- ahrf_validation |> 
    mutate(DIABETES = case_when(
    DIABETES == "1" ~ "Type-1 Diabetes",
    DIABETES == "2" ~ "Type-2 Diabetes",
    DIABETES == "3" ~ "Gestational Diabetes",
    DIABETES == "4" ~ "Secondary Diabetes/Other",
    DIABETES == "5" ~ "None"))

# Reorder Diabetes
ahrf_validation <- ahrf_validation |> 
  mutate(DIABETES = factor(DIABETES, levels = c("None", "Type-1 Diabetes", "Type-2 Diabetes", "Gestational Diabetes", "Secondary Diabetes/Other")))

# Smoking Intensity
ahrf_validation <- ahrf_validation |> 
  mutate(SMOKINGINTENSITY = as.numeric(SMOKINGINTENSITY)) |> 
  mutate(SMOKINGINTENSITY = replace_na(SMOKINGINTENSITY, 0))


#==========================================EXPOSURE==========================================#

# Calculate Continuous PaO2:FiO2
ahrf_validation <- ahrf_validation |> 
  mutate(pf_cont = as.numeric(PAO2_ANZ)/as.numeric(FIO2_ANZ))

# Calculate AHRF Vs No-AHRF
ahrf_validation <- ahrf_validation |> 
  mutate(AHRF = case_when(
    pf_cont >=300 ~ "No AHRF",
    pf_cont <300 ~ "AHRF"))

# Reorder AHRF
ahrf_validation <- ahrf_validation |> 
  mutate(AHRF = factor(AHRF, levels = c("No AHRF", "AHRF")))

#Calculate Categorical PaO2:FiO2
ahrf_validation <- ahrf_validation |> 
  mutate(pf_cat = case_when(
    pf_cont < 100 ~ "Severe",
    pf_cont >=100 & pf_cont < 200 ~ "Moderate",
    pf_cont >=200 & pf_cont <300 ~ "Mild",
    pf_cont >=300 ~ "None"))

# Reorder pf_cat
ahrf_validation <- ahrf_validation |> 
  mutate(pf_cat = factor(pf_cat, levels = c("None", "Mild", "Moderate", "Severe")))

# Rename AHRF Causes (APache3 Diagnostic Code)
ahrf_validation <- ahrf_validation |> 
  mutate(ahrf_adm = case_when(
    (AP3DIAG>=1202) & (AP3DIAG<=1213) ~ "Cardiac Surgery",
    (AP3DIAG>=1301) & (AP3DIAG<=1304) ~ "Other Post-Operative",
    (AP3DIAG>=1401) & (AP3DIAG<=1413) ~ "Gastrointestinal Surgery",
    (AP3DIAG>=1501) & (AP3DIAG<=1506) ~ "Other Post-Operative",
    (AP3DIAG>=1602) & (AP3DIAG<=1605) ~ "Other Post-Operative",
    (AP3DIAG>=1701) & (AP3DIAG<=1705) ~ "Other Post-Operative",
    (AP3DIAG>=1801) & (AP3DIAG<=1803) ~ "Other Post-Operative",
    (AP3DIAG>=1902) & (AP3DIAG<=1904) ~ "Other Post-Operative",
    (AP3DIAG==2101) ~ "Other Non-Operative",
    (AP3DIAG==2201) ~ "Other Non-Operative",
    (AP3DIAG>=101) & (AP3DIAG<=111) ~ "Cardiovascular Disease",
    (AP3DIAG>=201) & (AP3DIAG<=213) ~ "Respiratory Disease",
    (AP3DIAG>=301) & (AP3DIAG<=313) ~ "Other Non-Operative",
    (AP3DIAG>=401) & (AP3DIAG<410) ~ "Other Non-Operative",
    (AP3DIAG>=501) & (AP3DIAG<=504) ~ "Sepsis",
    (AP3DIAG>601) & (AP3DIAG<=605) ~ "Other Non-Operative",
    (AP3DIAG>=701) & (AP3DIAG<=704) ~ "Other Non-Operative",
    (AP3DIAG>=801) & (AP3DIAG<=802) ~ "Other Non-Operative",
    (AP3DIAG>=901) & (AP3DIAG<=903) ~ "Other Non-Operative",
    (AP3DIAG>=1101) & (AP3DIAG<=1102) ~ "Other Non-Operative")) 

# Refactor ahrf_cause
ahrf_validation <- ahrf_validation |> 
  mutate(ahrf_adm = factor(ahrf_adm, levels = c("Cardiac Surgery", "Respiratory Disease", "Cardiovascular Disease", "Sepsis", "Gastrointestinal Surgery", "Other Non-Operative", "Other Post-Operative")))

#==========================================OUTCOMES==========================================#

# Change LOS to days (from hours)
ahrf_validation <- ahrf_validation |>  mutate(icu_los = as.numeric(ICU_HRS)/24) |> select(-ICU_HRS)
ahrf_validation <- ahrf_validation |>  mutate(hosp_los = as.numeric(HOSP_HRS)/24) |> select(-HOSP_HRS)

# Rename Hospital Discharge Destination (HOSP_OUTCM)
ahrf_validation <- ahrf_validation |> 
  mutate(hosp_dc_dest = case_when(
    HOSP_OUTCM == "2" ~ "Died",
    HOSP_OUTCM == "3" ~ "Home",
    HOSP_OUTCM == "4" ~ "Nursing Home/Chronic Care/Palliative Care/Rehabilitation",
    HOSP_OUTCM == "5" ~ "Other Hospital- ICU",
    HOSP_OUTCM == "6" ~ "Other Acute Care Hospital",
    HOSP_OUTCM == "7" ~ "Nursing Home/Chronic Care/Palliative Care/Rehabilitation",
    HOSP_OUTCM == "8" ~ "Mental Health",
    HOSP_OUTCM == "9" ~ "Hospital in the Home",
    HOSP_OUTCM == "10" ~ "Died",
  ))

# Refactor Hospital Discharge Destination
ahrf_validation <- ahrf_validation |> 
  mutate(hosp_dc_dest = factor(hosp_dc_dest, levels = c("Died", "Home", "Nursing Home/Chronic Care/Palliative Care/Rehabilitation", "Other Acute Care Hospital", 
                                                        "Other Hospital- ICU", "Mental Health", "Hospital in the Home")))

# Create variable for respiratory support outcomes
ahrf_validation <- ahrf_validation |> 
mutate(vent_sup = case_when(
  ECMO_IND == "1"~ "ECMO",
  INV_IND == "1" ~ "IPPV",
  NIV_IND == "1" ~ "NIV",
  .default = "None")) 

# Refactor Vent Support 
ahrf_validation <- ahrf_validation |> 
  mutate(vent_sup = factor(vent_sup, levels = c("None", "NIV", "IPPV", "ECMO")))

library(tidyverse)
# Mortality Date Data- Create Survival Time Interval
ahrf_validation <- ahrf_validation |> 
  # Convert character to date format
  mutate(ICU_AD_DTM = ymd_hms(ICU_AD_DTM),
         NDI_NHI_DeathDate = ymd_hms(NDI_NHI_DeathDate)) |> 
  # Create interval between ICU admission and death
  mutate(surv_interval = difftime(NDI_NHI_DeathDate, ICU_AD_DTM, units = "days"))

# Create Binary variables of survival at different time-points
# 28 Day Mortality
ahrf_validation<- ahrf_validation |> 
  mutate(mort_28d = if_else(surv_interval<28, 1, 0),
         mort_90d = if_else(surv_interval<90, 1, 0),
         mort_180d = if_else(surv_interval<180, 1, 0),
         mort_365d = if_else(surv_interval<365, 1, 0))

# Convert NAs into 0
ahrf_validation<- ahrf_validation |> 
  mutate(mort_28d = replace_na(mort_28d, 0),
         mort_90d = replace_na(mort_90d, 0),
         mort_180d = replace_na(mort_180d, 0),
         mort_365d = replace_na(mort_365d, 0))


#==========================================REMOVE MISSING DATA==========================================#
# Remove variables that have missing data
ahrf_validation <- ahrf_validation |> 
  filter(!(DIED_HOSP == "NA"))

ahrf_validation <- ahrf_validation[complete.cases(ahrf_validation$pf_cont),]

# Filtering patients with PF > 700
ahrf_validation <- ahrf_validation |> 
  filter(!(pf_cont > 700))

#==========================================TABLE 1==========================================#
# Count row numbers to get patient numbers in table 1
ahrf_validation <- ahrf_validation |>  mutate(PatientID = row_number()) |>  
  group_by(PatientID) |> 
  mutate(count_pt = row_number() == 1L) |> 
  ungroup()

# Generate Table 1- AHRF Categories
t1 <- ahrf_validation |>  
  select(patientn = count_pt, AGE, age_cat, SEX, Apache2Score, Apache3Score, ANZRODRiskOfDeath, sofa_score_derived, ap3diag_min, COVID_pneumonitis_derived, icu_admit_source, HospitalClassification, CHR_RESP, CHR_CVS, CHR_LIV, CHR_REN, FRAILTY, DIABETES, pf_cat) |>  
    tbl_summary(by = pf_cat, missing = "no",
            label = list(
              patientn = "Number of Patients",
              AGE = "Median Age in Years (IQR)",
              age_cat = "Age Category, Years",
              SEX = "Gender",
              Apache2Score = "Median APACHE II Score (IQR)",
              Apache3Score = "Median APACHE III Score (IQR)",
              ANZRODRiskOfDeath = "Median ANZROD (IQR)",
              sofa_score_derived = "Median SOFA (IQR)",
              ap3diag_min = "Admission Diagnosis",
              COVID_pneumonitis_derived = "COVID Penumonitis (Proven)",
              icu_admit_source = "Admission Source",
              HospitalClassification = "Hospital Type",
              CHR_RESP = "Chronic Respiratory Disease",
              CHR_CVS = "Chronic CVS Disease",
              CHR_LIV = "Chronic Hepatic Disease",
              CHR_REN = "Chronic Renal Disease",
              FRAILTY = "Frailty",
              DIABETES = "Diabetes"),
            value = list(
              COVID_pneumonitis_derived ~ 1,
              CHR_RESP ~ 1,
              CHR_CVS ~ 1,
              CHR_LIV ~ 1,
              CHR_REN ~ 1),
            statistic = list(
              patientn ~ "{n}",
              AGE ~ "{median} ({p25}-{p75})",
              SEX ~ "{n} ({p}%)",
              Apache2Score ~ "{median} ({p25}-{p75})",
              Apache3Score ~ "{median} ({p25}-{p75})",
              ANZRODRiskOfDeath ~ "{median} ({p25}-{p75})",
              sofa_score_derived ~ "{median} ({p25}-{p75})",
              ap3diag_min ~ "{n} ({p}%)",
              icu_admit_source ~ "{n} ({p}%)")) |> 
  modify_header(stat_1 = "**None (PF >300)**", stat_2 = "**Mild (PF 200-300)**", stat_3 = "**Moderate (PF 100-200)**", stat_4 = "**Severe (PF < 100)**") |> 
  modify_spanning_header(all_stat_cols() ~ "**Acute Hypoxaemic Respiratory Failure Category**") |> 
  add_overall(col_label = "**Overall**", last = FALSE) |> 
  bold_labels() |> 
  italicize_labels()
```

```{r}
t1
```


```{r}
# Graph for survival rates after ICU discharge

post_icu_survival <- ahrf_validation |> 
  filter(DIED_ICU == 0) |> 
  mutate(surv_time = as.numeric(surv_interval)) |> 
  mutate(surv_time = replace_na(surv_time, 365)) |> 
  #group_by(pf_cat) |>
  summarise(n = n()) |> 
  mutate(percent = 100*n/sum(n)) |> 
ggplot(aes(x=surv_time, y=percent))+
  geom_smooth(aes(color = "Overall"), method = "glm", formula = y ~ splines::ns(x, 4), se=TRUE, linetype = 4)+
  geom_smooth(aes(x=IcuAdmitYYYY, y=DIED_HOSP, color = pf_cat), method = "glm", formula = y ~ splines::ns(x, 4), se=TRUE)+
  labs(x="Year", y="Hospital Mortality (%)", title="Unadjusted Hospital Mortality over Time", color = "AHRF Category")+
  scale_y_continuous(labels = scales::percent)+
  theme_bw() +
  theme(panel.grid.major.x = element_blank())+
  guides(color=guide_legend(override.aes=list(fill=NA, linetype = c(4,1,1,1,1))))+
  scale_color_discrete(limits = c("Overall", "None","Mild", "Moderate", "Severe"))
```
